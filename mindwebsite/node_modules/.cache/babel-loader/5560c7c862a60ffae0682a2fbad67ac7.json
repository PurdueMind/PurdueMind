{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/workspaces/PurdueMind.github.io/mindwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/workspaces/PurdueMind.github.io/mindwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/workspaces/PurdueMind.github.io/mindwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/workspaces/PurdueMind.github.io/mindwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n/**\n * Renders an arrow component used to transition from right-to-left or left-to-right through the carousel slides.\n */\n\n\nvar Arrow = /*#__PURE__*/function (_react$Component) {\n  _inherits(Arrow, _react$Component);\n\n  var _super = _createSuper(Arrow);\n\n  function Arrow() {\n    _classCallCheck(this, Arrow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Arrow, [{\n    key: \"hasNext\",\n    value:\n    /**\n     * @returns {Boolean} True if there is a next slide to transition to, else False.\n     */\n    function hasNext() {\n      var _this$props = this.props,\n          direction = _this$props.direction,\n          infinite = _this$props.infinite,\n          numSlides = _this$props.numSlides,\n          selectedIndex = _this$props.selectedIndex;\n      return infinite || (direction === 'left' ? selectedIndex > 0 : selectedIndex < numSlides - 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          prevSlide = _this$props2.prevSlide,\n          nextSlide = _this$props2.nextSlide,\n          direction = _this$props2.direction,\n          arrows = _this$props2.arrows;\n      var arrowComponent = null;\n      var buttonClass = 'carousel-arrow-default';\n\n      if (arrows.left) {\n        buttonClass = arrows.className ? arrows.className : '';\n        arrowComponent = direction === 'left' ? arrows.left : arrows.right;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(\"button\", {\n        type: \"button\",\n        disabled: !this.hasNext(),\n        onClick: direction === 'left' ? prevSlide : nextSlide,\n        className: \"carousel-arrow carousel-\".concat(direction, \"-arrow \").concat(buttonClass)\n      }, arrowComponent);\n    }\n  }], [{\n    key: \"propTypes\",\n    get: function get() {\n      return {\n        numSlides: _propTypes.default.number.isRequired,\n        selectedIndex: _propTypes.default.number.isRequired,\n        infinite: _propTypes.default.bool.isRequired,\n        prevSlide: _propTypes.default.func.isRequired,\n        nextSlide: _propTypes.default.func.isRequired,\n        direction: _propTypes.default.oneOf(['left', 'right']).isRequired,\n        arrows: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({\n          left: _propTypes.default.node.isRequired,\n          right: _propTypes.default.node.isRequired,\n          className: _propTypes.default.string\n        })])\n      };\n    }\n  }]);\n\n  return Arrow;\n}(_react.Component);\n\nexports.default = Arrow;","map":{"version":3,"sources":["/workspaces/PurdueMind.github.io/mindwebsite/node_modules/react-img-carousel/lib/controls/arrow.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_react","_propTypes","Arrow","props","direction","infinite","numSlides","selectedIndex","prevSlide","nextSlide","arrows","arrowComponent","buttonClass","left","className","right","createElement","type","disabled","hasNext","onClick","number","isRequired","bool","func","oneOf","oneOfType","shape","node","string","Component"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/**\n * Renders an arrow component used to transition from right-to-left or left-to-right through the carousel slides.\n */\nclass Arrow extends _react.Component {\n  static get propTypes() {\n    return {\n      numSlides: _propTypes.default.number.isRequired,\n      selectedIndex: _propTypes.default.number.isRequired,\n      infinite: _propTypes.default.bool.isRequired,\n      prevSlide: _propTypes.default.func.isRequired,\n      nextSlide: _propTypes.default.func.isRequired,\n      direction: _propTypes.default.oneOf(['left', 'right']).isRequired,\n      arrows: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({\n        left: _propTypes.default.node.isRequired,\n        right: _propTypes.default.node.isRequired,\n        className: _propTypes.default.string\n      })])\n    };\n  }\n  /**\n   * @returns {Boolean} True if there is a next slide to transition to, else False.\n   */\n\n\n  hasNext() {\n    const {\n      direction,\n      infinite,\n      numSlides,\n      selectedIndex\n    } = this.props;\n    return infinite || (direction === 'left' ? selectedIndex > 0 : selectedIndex < numSlides - 1);\n  }\n\n  render() {\n    const {\n      prevSlide,\n      nextSlide,\n      direction,\n      arrows\n    } = this.props;\n    let arrowComponent = null;\n    let buttonClass = 'carousel-arrow-default';\n\n    if (arrows.left) {\n      buttonClass = arrows.className ? arrows.className : '';\n      arrowComponent = direction === 'left' ? arrows.left : arrows.right;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(\"button\", {\n      type: \"button\",\n      disabled: !this.hasNext(),\n      onClick: direction === 'left' ? prevSlide : nextSlide,\n      className: `carousel-arrow carousel-${direction}-arrow ${buttonClass}`\n    }, arrowComponent);\n  }\n\n}\n\nexports.default = Arrow;"]},"metadata":{},"sourceType":"script"}